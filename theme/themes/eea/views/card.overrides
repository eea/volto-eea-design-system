/*******************************
         Theme Overrides
*******************************/

/* Avoid long links from spilling outside of card body area */
.ui.cards > .card > .extra,
.ui.card > .extra {
  font-size: @extraLinkFontSize;
  word-break: @extraLinkWordBreak;
  display: flex;
  flex-wrap: wrap;
  justify-content: var(--text-align, @extraJustifyContent);
}

/* Cards must have same height */
.ui.card {
  height: 100%;
  text-align: var(--text-align, @cardTextAlign);
  background-color: var(--card-background-color, @background);
  color: var(--card-text-color, @cardColor);
}

.card .meta .date {
  margin-left: @cardMetaDateMarginLeft;
}

.ui.cards > .card:not(.rounded) > .image,
.ui.card:not(.rounded) > .image {
  overflow: @cardImageOverflow;
  height: @cardImageHeight;

  img {
    width: var(--card-image-width, @imageWidth);
    height: var(--card-image-width, @imageHeight);
  }
}

.ui.card img, img.ui.image {
  object-fit: var(--image-object-fit, @imageObjectFit);
  object-position: var(--image-object-position, @imageObjectPosition);
}


.ui.cards > .card > .content > *:not(:last-child),
.ui.card > .content > *:not(:last-child) {
  margin-bottom: @cardContentMarginBottom;
}

.ui.card .meta {
  display: flex;
  justify-content: var(--justify-content, @metaJustifyContent);
  width: 100%;
}


.ui.card .meta > .category {
  font-size: @metaFontSize;
}

// add bottom margin also when meta isn't inside .content
//
.ui.cards > .card .meta, .ui.card .meta {
    margin-bottom: @rem-space-4;
}

.ui.card .extra.content a:not(.ui) {
  font-weight: @contentLinkFontWeight;

  &:hover {
    text-decoration: @contentLinkTextDecoration;
  }
}

.card .header-link:hover {
  text-decoration: @contentLinkTextDecoration;
}

.ui.left.card {
  margin-right: auto;
}

.ui.right.card {
  margin-left: auto;
}

/*******************************
            Primary
*******************************/
.card.has--theme--primary,
.card.primary {
  --card-background-color: @primaryCardBackground;
  --card-text-color: @primaryCardColor;
}
/* Inverted */
.card.has--theme--primary.has--inverted--true,
.card.primary.inverted {
  --card-background-color: @invertedPrimaryCardBackgroundColor;
  --card-text-color: @invertedPrimaryCardColor;
}

/*******************************
            Secondary
*******************************/
.card.has--theme--secondary,
.card.secondary {
  --card-background-color:  @secondaryCardBackground;
  --card-text-color: @secondaryCardColor;
}
/* Inverted */
.card.has--theme--secondary.has--inverted--true,
.card.secondary.inverted {
  background-color: @invertedSecondaryCardBackgroundColor;
  color: @invertedSecondaryCardColor;
}

/*******************************
            Tertiary
*******************************/
.card.has--theme--tertiary,
.card.tertiary {
  --card-background-color:  @tertiaryCardBackground;
  --card-text-color: @tertiaryCardColor;
}
/* Inverted */
.card.has--theme--tertiary.has--inverted--true,
.card.tertiary.inverted {
  --card-background-color:  @invertedTertiaryCardBackgroundColor;
  --card-text-color:  @invertedTertiaryCardColor;
}

/*******************************
          Rounded Card
*******************************/
.ui.card.rounded > .image {
  height: auto;
}

.card.rounded {
  --card-image-width: @roundedImageWidth;
  --card-image-height: @roundedImageHeight;
}
.ui.card.rounded {
  padding-top: @iconCardPaddingTop;
  border: none;

  .image {
    display: flex;
    justify-content: @roundedImageJustifyContent;

  }

  img {
    width: @roundedImageWidth;
    height: @roundedImageHeight;
    border-radius: @roundedImageBorderRadius !important;
    object-fit: var(--image-object-fit, @imageObjectFit);
    object-position: var(--image-object-position, @imageObjectPosition);
  }

  .content {
    border-top: none;

    .header {
      margin-bottom: @roundedContentTitleMarginBottom;
      font-size: @roundedContentTitleFontSize;
      font-weight: @roundedContentTitleFontWeight;
      //text-align: @roundedContentTitleTextAlign;
    }

    .description {
      //text-align: @roundedContentTitleTextAlign;
      font-size: @roundedMetadataFontSize;
      font-weight: @roundedMetadataFontWeight;
    }
  }
}

/*******************************
        Publication Card
*******************************/

.ui.card.publication {
  width: @mobilePublicationCardWidth;
  border: none;

  .image {
    height: @mobilePublicationcardImageHeight;
    flex-grow: 1;
  }

  .content {
    height: @mobileCardContentHeight;
    max-height: @cardContentMaxHeight;
    padding: @cardContentPadding;
    background-color: @publicationCardDescriptionColor;

    .meta,
    .meta a:not(.ui) {
      color: @publicationCardtextColor;
      font-size: @cardMetaFontSize;
      font-weight: @cardMetaTagFontWeight;
    }

    .description {
      display: -webkit-box;
      overflow: hidden;
      margin-top: 0;
      -webkit-box-orient: vertical;
      color: @publicationCardtextColor;
      font-size: @cardDescriptionTextFontSize;
      font-weight: @cardDescriptionTextFontWeight;
      -webkit-line-clamp: @cardDescriptionTextLineClampMobile;
      text-overflow: ellipsis;
    }
  }
}

@media only screen and (min-width: @tabletBreakpoint) {
  .ui.card.publication {
    width: @tabletPublicationCardWidth;

    .image {
      height: @tabletPublicationcardImageHeight;
    }

    .content {
      height: @tabletCardContentHeight;
      max-height: @tabletCardContentMaxHeight;

      .description {
        -webkit-line-clamp: @cardDescriptionTextLineClampTablet;
      }
    }
  }
}

@media only screen and (min-width: @computerBreakpoint) {
  .ui.card.publication {
    width: @computerPublicationCardWidth;

    .image {
      height: @computerPublicationcardImageHeight;
    }
  }
}

.fluid-card-row {
  display: grid;
  justify-content: space-between;
  gap: 1.25rem;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));

  .ui.card {
    margin: 0;
  }
}

/*******************************
      Image with title
*******************************/
// Adding the default image css for image inside image-with-title
.ui.cards > .card > .image {
  position: relative;
  display: block;
  flex: 0 0 auto;
  padding: 0;
  background: transparent;
}


.card .gradient {
  display: flex;
  align-items: end;
  position: absolute;
  bottom: 0;
  width: 100%;
  height: 100%;
  padding: @imageTitlePadding;
  .image-overlay-gradient();
}

.gradient .header {
  font-size: var(--image-header-font-size, @imageTitleMobileFontSize);
  color: @imageTitleColor;
  font-weight: @imageTitleFontWeight;
  line-height: @imageTitleLineHeight;
}

@media only screen and (min-width: @computerBreakpoint) {
  .card .gradient {
    padding-block: @imageTitlePaddingBlock;
  }
  .gradient .header {
    --image-header-font-size: @imageTitleFontSize;
  }
}

/*******************************
        Carousel
*******************************/

.cards-carousel {
  position: relative;

  .slick-list {
    margin: @slickListMargin;
  }

  .slick-track {
    display: flex;
    margin: @slickTrackMargin;
  }

  .slick-slide {
    display: flex;
    height: auto;
    flex: 1;
    flex-direction: column;
    margin: @slickSlideMargin;

    > div {
      height: 100%;
    }
  }
}

/* Carousel arrows */
.cards-carousel .ui.button.icon.slider-arrow {
  padding: @carouselButtonPadding;
  margin: @carouselButtonMargin;

  .active, &:focus, &:hover {
    background: transparent;
  }

  &:focus-visible {
    outline: auto;
  }

  .icon {
    color: @carouselButtonIconColor;
    font-size: @carouselButtonIconFontSize;
    opacity: @carouselButtonIconOpacity;
    padding-top: @carouselButtonPaddingTop;
    width: auto;
  }
}

.cards-carousel .slider-arrow {
  position: absolute;
  top: 50%;
  bottom: auto;
  padding: 0;
  border: none;
  background: transparent;
  cursor: pointer;
  outline: none;
  transform: translate(0, -50%);
  z-index: 1; // make arrows clickable even on events page with right column
}

.cards-carousel .prev-arrow {
  right: auto;
  left: @carouselButtonDistance;
}

.cards-carousel .next-arrow {
  right: @carouselButtonDistance;
  left: auto;
}

/* Custom carousel pagination bullets */
// avoid dots going over content that follows sliders
.slick-dots {
  position: relative;
  bottom: 0;
}

.cards-carousel .slick-dots li button:before {
  background-color: @carouselDotsBackgroundColor;
  color: transparent;
  border: @carouselDotsBorder;
  border-radius: @carouselDotsBorderRadius;
  opacity: @carouselDotsOpacity;
  width: @mobileCarouselDotsWidth;
  height: @mobileCarouselDotsHeight;
}

.cards-carousel .slick-dots li.slick-active button:before {
  background-color: @carouselDotsActiveBackgroundColor;
  color: transparent;
}

.slick-dots li button:focus-visible {
  outline: black;
  outline-style: auto;
}

@media only screen and (max-width: @tabletBreakpoint) {
  .cards-carousel .slick-dots li,
  .cards-carousel .slick-dots li button {
    width: @mobileCarouselDotsButtonWidth;
    height: @mobileCarouselDotsButtonHeight;
  }

}

/*******************************
          Icon Card
*******************************/

.ui.card.icon {
  padding-top: @iconCardPaddingTop;
  .content {
    border-top: none;
    .header {
      word-break: break-word;
      font-size: @iconCardHeaderFontSize;
    }
  }
  .icon {
    margin: auto;
  }
}

.ui.cards > .card > i.icon,
.ui.cards > .card > a:not(.ui) > i.icon,
.ui.card > i.icon,
.ui.card > a:not(.ui) > i.icon {
  color: @iconColor;
}

/*******************************
          Teaser Card
*******************************/
// Teaser cards grid on tablet update padding and min-width
@media only screen and (min-width: @tabletBreakpoint) and (max-width: @largestTabletScreen) {
  .ui.grid > .column.grid-block-teaser,
  .ui.grid > .row > .column.grid-block-teaser {
    padding-left: @tabletTeaserCardPaddingInline;
    padding-right: @tabletTeaserCardPaddingInline;
  }

  .grid-block-teaser .ui.card {
    min-width: @tabletTeaserCardMinWidth;
  }
}

// Spacing adjustment to display outline with overflow hidden
.ui.card .header {
  padding: @headerPadding;
}

// when title is on image the extra padding that displays the
// link outline reveals part of title from 3rd row
.ui.card .gradient .header {
  padding: @headerOnImagePadding;
}

.ui.card .header > a {
  .useTitleMaxLines();
}

// Meta align fix
.ui.card.u-card .meta:after {
    content: none;
}
