/*******************************
         Theme Overrides
*******************************/

/* Avoid long links from spilling outside of card body area */
.ui.cards > .card > .extra,
.ui.card > .extra {
  font-size: @extraLinkFontSize;
  word-break: @extraLinkWordBreak;
}

/* Cards must have same height */
.ui.card {
  height: 100%;
}

.ui.cards > .card:not(.rounded) > .image,
.ui.card:not(.rounded) > .image {
  overflow: @cardImageOverflow;
  height: @cardImageHeight;

  img {
    width: @imageWidth;
    height: @imageHeight;
    object-fit: @imageObjectFit;
    object-position: @imageObjectPosition;
  }
}

.ui.cards > .card > i.icon,
.ui.cards > .card > a:not(.ui) > i.icon,
.ui.card > i.icon,
.ui.card > a:not(.ui) > i.icon {
  color: @iconColor;
}

.ui.cards > .card > .content > *:not(:last-child),
.ui.card > .content > *:not(:last-child) {
  margin-bottom: @cardContentMarginBottom;
}

.ui.card .meta {
  display: flex;
  justify-content: space-between;
  width: 100%;
}


.ui.card .meta > .category {
  font-size: @metaFontSize;
}

// add bottom margin also when meta isn't inside .content
//
.ui.cards > .card .meta, .ui.card .meta {
    margin-bottom: @rem-space-4;
}

.ui.card .extra.content a:not(.ui) {
  font-weight: @contentLinkFontWeight;

  &:hover {
    text-decoration: @contentLinkTextDecoration;
  }
}

.card .header-link:hover {
  text-decoration: @contentLinkTextDecoration;
}

.ui.left.card {
  margin-right: auto;
}

.ui.right.card {
  margin-left: auto;
}

/*******************************
            Primary
*******************************/

.ui.card.primary:not(.inverted),
.ui.card.primary:not(.inverted) .image {
  background: @primaryBackground;
}

.ui.card.primary > .content > .header {
  color: @primaryHeaderColor;
}

.ui.card.primary > i.icon,
.ui.card.primary > a:not(.ui) > i.icon,
.ui.card.primary > .content a:not(.ui),
.ui.card.primary > .content a:not(.ui):hover,
.ui.card.primary > .content > .description {
  color: @primaryDescriptionColor;
}

.ui.card.primary > .extra.content a:not(.ui) {
  color: @primaryExtraLinkColor;

  &:hover {
    color: @primaryExtraLinkHoverColor;
  }
}

.ui.card.primary > .content > .meta,
.ui.card.primary > .content > .meta a:not(.ui) {
  color: @primaryMetaColor;
}

/* Inverted */
.ui.card.primary.inverted > i.icon,
.ui.card.primary.inverted > .content * {
  color: @invertedPrimaryContentColor;
}

.ui.card.primary.inverted > a:not(.ui) > i.icon,
.ui.card.primary.inverted > .content a:not(.ui),
.ui.card.primary.inverted > .extra.content a:not(.ui) {
  color: @invertedPrimaryContentColor;

  &:hover {
    color: @invertedPrimaryColorHover;
  }
}

/*******************************
            Secondary
*******************************/

.ui.card.secondary:not(.inverted),
.ui.card.secondary:not(.inverted) .image {
  background: @secondaryBackground;
}

.ui.card.secondary > i.icon,
.ui.card.secondary > a:not(.ui) > i.icon,
.ui.card.secondary > .content a:not(.ui),
.ui.card.secondary > .content a:not(.ui):hover,
.ui.card.secondary > .content > .header {
  color: @secondaryHeaderColor;
}

.ui.card.secondary > .content > .description {
  color: @secondaryDescriptionColor;
}

.ui.card.secondary > .extra.content a:not(.ui) {
  color: @secondaryExtraLinkColor;

  &:hover {
    color: @secondaryExtraLinkHoverColor;
  }
}

.ui.card.secondary > .content > .meta,
.ui.card.secondary > .content > .meta a:not(.ui) {
  color: @secondaryMetaColor;
}

/* Inverted */
.ui.card.secondary.inverted > i.icon,
.ui.card.secondary.inverted > .content * {
  color: @invertedSecondaryContentColor;
}

.ui.card.secondary.inverted > a:not(.ui) > i.icon,
.ui.card.secondary.inverted > .content a:not(.ui),
.ui.card.secondary.inverted > .extra.content a:not(.ui) {
  color: @invertedSecondaryContentColor;

  &:hover {
    color: @invertedSecondaryColorHover;
  }
}

/*******************************
            Tertiary
*******************************/

.ui.card.tertiary:not(.inverted),
.ui.card.tertiary:not(.inverted) .image {
  background: @tertiaryBackground;
}

.ui.card.tertiary > i.icon,
.ui.card.tertiary > a:not(.ui) > i.icon,
.ui.card.tertiary > .content a:not(.ui),
.ui.card.tertiary > .content a:not(.ui):hover,
.ui.card.tertiary > .content > .header {
  color: @tertiaryHeaderColor;
}

.ui.card.tertiary > .content > .description {
  color: @tertiaryDescriptionColor;
}

.ui.card.tertiary > .extra.content a:not(.ui) {
  color: @tertiaryExtraLinkColor;

  &:hover {
    color: @tertiaryExtraLinkHoverColor;
  }
}

.ui.card.tertiary > .content > .meta,
.ui.card.tertiary > .content > .meta a:not(.ui) {
  color: @tertiaryMetaColor;
}

/* Inverted */
.ui.card.tertiary.inverted > i.icon,
.ui.card.tertiary.inverted > .content * {
  color: @invertedTertiaryContentColor;
}

.ui.card.tertiary.inverted > a:not(.ui) > i.icon,
.ui.card.tertiary.inverted > .content a:not(.ui),
.ui.card.tertiary.inverted > .extra.content a:not(.ui) {
  color: @invertedTertiaryContentColor;

  &:hover {
    color: @invertedTertiaryColorHover;
  }
}

/*******************************
          Rounded Card
*******************************/

.ui.cards > .ui.card.rounded > .image,
.ui.card.rounded > .image {
  height: auto;
}

.ui.cards .ui.card.rounded,
.ui.card.rounded {
  padding-top: @iconCardPaddingTop;
  border: none;

  .image {
    display: flex;
    justify-content: @roundedImageJustifyContent;

  }

  img {
    width: @roundedImageWidth;
    height: @roundedImageHeight;
    border-radius: @roundedImageBorderRadius;
  }

  .content {
    border-top: none;

    .header {
      margin-bottom: @roundedContentTitleMarginBottom;
      font-size: @roundedContentTitleFontSize;
      font-weight: @roundedContentTitleFontWeight;
      text-align: @roundedContentTitleTextAlign;
    }

    .description {
      text-align: @roundedContentTitleTextAlign;
      font-size: @roundedMetadataFontSize;
      font-weight: @roundedMetadataFontWeight;
    }
  }
}

/*******************************
        Publication Card
*******************************/

.ui.card.publication {
  width: @mobilePublicationCardWidth;
  border: none;

  .image {
    height: @mobilePublicationcardImageHeight;
    flex-grow: 1;
  }

  .content {
    height: @mobileCardContentHeight;
    max-height: @cardContentMaxHeight;
    padding: @cardContentPadding;
    background-color: @publicationCardDescriptionColor;

    .meta,
    .meta a:not(.ui) {
      color: @publicationCardtextColor;
      font-size: @cardMetaFontSize;
      font-weight: @cardMetaTagFontWeight;
    }

    .description {
      display: -webkit-box;
      overflow: hidden;
      margin-top: 0;
      -webkit-box-orient: vertical;
      color: @publicationCardtextColor;
      font-size: @cardDescriptionTextFontSize;
      font-weight: @cardDescriptionTextFontWeight;
      -webkit-line-clamp: @cardDescriptionTextLineClampMobile;
      text-overflow: ellipsis;
    }
  }
}

@media only screen and (min-width: @tabletBreakpoint) {
  .ui.card.publication {
    width: @tabletPublicationCardWidth;

    .image {
      height: @tabletPublicationcardImageHeight;
    }

    .content {
      height: @tabletCardContentHeight;
      max-height: @tabletCardContentMaxHeight;

      .description {
        -webkit-line-clamp: @cardDescriptionTextLineClampTablet;
      }
    }
  }
}

@media only screen and (min-width: @computerBreakpoint) {
  .ui.card.publication {
    width: @computerPublicationCardWidth;

    .image {
      height: @computerPublicationcardImageHeight;
    }
  }
}

.fluid-card-row {
  display: grid;
  justify-content: space-between;
  gap: 1.25rem;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));

  .ui.card {
    margin: 0;
  }
}

/*******************************
        Carousel
*******************************/

.cards-carousel {
  position: relative;

  .slick-list {
    margin: @slickListMargin;
  }

  .slick-track {
    display: flex;
    gap: @slickTrackGap;
    margin: @slickTrackMargin;
  }

  .slick-slide {
    display: flex;
    height: auto;
    flex: 1;
    flex-direction: column;

    > div {
      height: 100%;
    }
  }
}

/* Carousel arrows */
.cards-carousel .ui.button.icon.slider-arrow {
  padding: @carouselButtonPadding;

  .active, &:focus, &:hover {
    background: transparent;
  }

  &:focus-visible {
    outline: auto;
  }

  .icon {
    color: @carouselButtonIconColor;
    font-size: @carouselButtonIconFontSize;
    opacity: @carouselButtonIconOpacity;
    padding-top: @carouselButtonPaddingTop;
    width: auto;
  }
}

.cards-carousel .slider-arrow {
  position: absolute;
  top: 50%;
  bottom: auto;
  padding: 0;
  border: none;
  background: transparent;
  cursor: pointer;
  outline: none;
  transform: translate(0, -50%);
  z-index: 1; // make arrows clickable even on events page with right column
}

.cards-carousel .prev-arrow {
  right: auto;
  left: @carouselButtonDistance;
}

.cards-carousel .next-arrow {
  right: @carouselButtonDistance;
  left: auto;
} 

/* Custom carousel pagination bullets */
// avoid dots going over content that follows sliders
.slick-dots {
  bottom: 0;
}
.cards-carousel .slick-dots li button:before {
  background-color: @carouselDotsBackgroundColor;
  color: transparent;
  border: @carouselDotsBorder;
  border-radius: @carouselDotsBorderRadius;
  opacity: @carouselDotsOpacity;
  width: @mobileCarouselDotsWidth;
  height: @mobileCarouselDotsHeight;
}

.cards-carousel .slick-dots li.slick-active button:before {
  background-color: @carouselDotsActiveBackgroundColor;
  color: transparent;  
}

.slick-dots li button:focus-visible {
  outline: black;
  outline-style: auto;
}

@media only screen and (min-width: @computerBreakpoint) {
  .cards-carousel .slick-dots li button:before {
    width: inherit;
    height: inherit;
  }
}

/*******************************
          Icon Card
*******************************/

.ui.card.icon {
  padding-top: @iconCardPaddingTop;
  .content {
    border-top: none;
    .header {
      word-break: break-word;
    }
  }
  .icon {
    margin: auto;
  }
}