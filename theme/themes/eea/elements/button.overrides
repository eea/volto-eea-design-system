/*******************************
         Theme Overrides
*******************************/

//Color for button text depends on background
.text-color(@backColor) when (lightness(@backColor) >= 40%) {
  color: @primaryButtonColor;
}
.text-color(@backColor) when (lightness(@backColor) < 40%) {
  color: @white;
}

/* Global Button Styles */
.ui.button,
.ui.buttons .button,
.ui.buttons {
  border: @buttonBorder @backgroundColor;

  &:hover,
  &:active,
  &:focus {
    border-color: @hoverBackgroundColor;
  }
}

/* Primary Button Border */
.ui.button.primary,
.ui.buttons.primary {
  border: @buttonBorder @primaryButtonColor;

  &:hover,
  &:focus {
    border: @buttonBorder @primaryColorHover;
  }

  &:active {
    border: @buttonBorder @primaryButtonBackgroundActive;
    background: @primaryButtonBackgroundActive;
  }
}

.ui.disabled.primary.button,
.ui.button.primary:disabled {
  border: @buttonBorder @primaryButtonDisabledBackground;
  background: @primaryButtonDisabledBackground;
  opacity: @buttonDisabledOpacity !important;
}

/* Secondary Button */
.ui.button.secondary,
.ui.buttons.secondary {
  border: @buttonBorder @secondaryButtonColor;
  background-color: @secondaryButtonBackground;
  color: @secondaryButtonColor;

  &:hover,
  &:active,
  &:focus {
    background-color: @secondaryButtonColor;
    color: @secondaryButtonColorHover;
  }
}

.ui.disabled.secondary.button,
.ui.button.secondary:disabled {
  border: @buttonBorder @secondaryButtonDisabledColor;
  color: @secondaryButtonDisabledColor;
  opacity: @buttonDisabledOpacity !important;
}

/* Secondary Button Inverted */
.ui.button.inverted.secondary,
.ui.buttons.inverted.secondary {
  border: @buttonBorder @secondaryButtonInvertedColor;
  color: @secondaryButtonInvertedColor;

  &:hover,
  &:active,
  &:focus {
    background-color: @secondaryButtonInvertedColor;
    color: @japaneseIndigo;
  }
}

/* Call to action Button */
.ui.button.action {
  border: @buttonBorder @actionButtonBackground;
  background-color: @actionButtonBackground;
  color: @actionButtonColor;

  &:hover,
  &:focus {
    border: @buttonBorder @actionButtonBackgroundHover;
    background-color: @actionButtonBackgroundHover;
  }

  &:active {
    border: @buttonBorder @actionButtonBackgroundActive;
    background: @actionButtonBackgroundActive;
  }
}

.ui.button.action[class*='right labeled'].icon.button {
  padding-right: 3em !important; // to apply to theme button paddings - button.less:856

  i {
    margin-right: 5px !important; // to apply to theme button paddings - button.less:693
  }
}

/* Text Button */
button.ui.button.text,
button.ui.buttons.text,
p.ui.button {
  border: none;
  background-color: @textButtonBackground;
  color: @primaryColor;

  &:hover,
  &:active,
  &:focus {
    border: none;
    background-color: @textButtonBackground;
    color: @primaryColorHover;
  }
}

.ui.circular.icon.button {
  padding: 0.75em 0.25em 0;

  .icon {
    font-size: 2em;
  }
}

/* Advanced Search Button */
.ui.button.search {
  box-sizing: border-box;
  border: @buttonBorder @white;
  background: @searchButtonBackground;
  border-radius: @searchButtonBorderRadius;
  color: @searchButtonColor;
  font-size: @searchButtonFontSize;

  &:active,
  &:visited,
  &:focus,
  &:hover {
    border: @buttonBorder @white;
    background: @searchButtonBackground;
    color: @searchButtonColor;
  }
}

.ui.icon.left.labeled.button.search {
  padding-left: 3.375em !important;
}

.ui.labeled.icon.button.search > .icon {
  left: @searchButtonIconLeft;
  background: @searchButtonBackground;
  font-size: @searchButtonFontSize;
  opacity: @searchButtonIconOpacity;
}

.searchbox.field > .ui.action.input > .icon.button {
  padding-top: 0;
  padding-right: 0;
  background: none;
  color: @blue;
  line-height: 1.6;

  &:hover {
    background: none;
  }

  .icon {
    font-weight: bold;
  }
}

.ui.basic.button {
  padding: 0;
  border: 0;
  background: transparent;
  cursor: pointer;
  text-align: initial;

  &:focus {
    outline: none;
  }
}
